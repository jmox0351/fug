var documenterSearchIndex = {"docs":
[{"location":"index.html#fug.jl","page":"Index","title":"fug.jl","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"fug.geoMean","category":"page"},{"location":"index.html#fug.geoMean","page":"Index","title":"fug.geoMean","text":"geoMean(kLKd::Float64, kLKb::Float64, kHKd::Float64, kHKb::Float64)\n\nreturns the geometric mean of k values\n\nsqrtfracLK_d cdot LK_bHK_d cdot HK_b\n\nArguments\n\n'kLKd': k value of light key in distilate\n\n'kLKb': k value of light key in bottoms\n\n'kHKd': k value of heavy key in distilate\n\n'kHKb': k value of heavy key in bottoms\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.fenske","category":"page"},{"location":"index.html#fug.fenske","page":"Index","title":"fug.fenske","text":"fenske(xLKd, kLKd, xHKd, kHKd, xLKb, kLKb, xHKb, kHKb)\n\nreturns the theoretical minimun number of trays for the distillation column\n\nn = fraclog_10(fracxLKd cdot xHKbxLKb cdot xHKd)log_10(alpha_avg)\n\nArguments\n\n'xLKd': x value of light key in distilate\n\n'kLKd': k value of light key in distilate\n\n'xHKd': x value of heavy key in distilate\n\n'kHKd': k value of heavy key in distilate\n\n'xLKb': x value of light key in bottoms\n\n'kLKb': k value of light key in bottoms\n\n'xHKb': x value of heavy key in bottoms\n\n'kHKb': k value of heavy key in bottoms\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.nonKeyComp","category":"page"},{"location":"index.html#fug.nonKeyComp","page":"Index","title":"fug.nonKeyComp","text":"nonKeyComp(alpha, nmin, F, D, B, xHKd, xHKb, xfi)\n\nreturns the molar fraction of a non-key component in both the bottoms and the distillate\n\n(xBi, xDi)\n\nby solving the 2 equations at the same time:\n\nfracx_dix_bi = alpha^n_min cdot fracx_HKdx_HKb\n\nF_i = D_i + B_i\n\ndone by using the following optimization:\n\nMin(fracalpha^N_min cdot x_HKdx_HKb - fracx_id cdot BF cdot x_if - D cdot x_id)^2\n\nArguments\n\n'alpha': relative volitility of component with the heavy key\n\n'nmin': the theoretical minimum number of stages for the column, get from Fenske equation\n\n'F': feed molar flow rate\n\n'D': distillate molar flow rate\n\n'B': bottoms molar flow rate\n\n'xHKd': x value of the heavy key in the distillate \n\n'xHKb': x value of the heavy key in the bottoms\n\n'xfi': the x value of the non-key component in the feed\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.underwood","category":"page"},{"location":"index.html#fug.underwood","page":"Index","title":"fug.underwood","text":"underwood(kDist, kBot, kHKd, kHKb, xFeed, qual, xDist)\n\nThe Underwood equation for finding the minimum reflux ratio by solving the first equation subject to the second condition:\n\nsum_i=1^n fracalpha_i cdot x_ifalpha_i - Theta = 1-q\n\nR_min = sum_i=1^n fracalpha_i cdot x_idalpha_i - Theta - 1\n\nArguments\n\n'kDist': vector of k values for all components in the distillate\n\n'kBot': vector of k values for all components in the bottoms\n\n'kHKd': k value of heavy key in distillate\n\n'kHKb': k value of heavy key in bottoms\n\n'xFeed': vector of x values for the feed\n\n'qual': quality of the feed stream (percentage of vapor if in VLE)\n\n'xDist': vector of x values for the distillate\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.gilliand","category":"page"},{"location":"index.html#fug.gilliand","page":"Index","title":"fug.gilliand","text":"gilliand(ract, rmin, nmin)\n\nThe Gilliand correlation for the actual number of stages. Solve the following equation for N\n\nfracN-N_minN+1 = 075 cdot 1-(fracR-R_minR+1)^0566\n\nArguments\n\n'ract': The actual reflux ratio, typically 1.1-1.4 times the minimum reflux ratio\n\n'rmin': Minimum reflux ratio (Underwood equation)\n\n'nmin': Theoretical minimum number of stages (Fenske equation)\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.kirkbride","category":"page"},{"location":"index.html#fug.kirkbride","page":"Index","title":"fug.kirkbride","text":"kirkbride(B,D,xHKf,xLKf,xHKd,xLKb,nTot)\n\nThe Kirkbride function for finding the optimial feed stage. Solves the first equation subject to the constraint:\n\nln(fracN_dN_b) = 0206 cdot ln(fracB cdot x_HKf cdot x_LKb^2D cdot x_LKf cdot x_HKd^2)\n\nN_tot = N_d + N_b\n\nArguments\n\n'B': bottoms molar flow rate\n\n'D': distillate molar flow rate\n\n'xHKf': x value of heavy key in feed\n\n'xLKf': x value of light key in feed\n\n'xHKd': x value of heavy key in distillate\n\n'xLKb': x value of light key in bottoms\n\n'nTot': total number of stages in column\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.diameter","category":"page"},{"location":"index.html#fug.diameter","page":"Index","title":"fug.diameter","text":"diameter(Fha, Ff, Fst, Cst, denl, deng, f, Ad, At, G)\n\nfunction for finding the diameter of the column based on fluid properities. Solves equation for:\n\nD_T = sqrtfrac4GfU_f pi (1-(A_dA_T)) rho_g\n\nU_f = C cdot sqrtfracrho_l-rho_grho_g\n\nC = C_st cdot F_st cdot F_f cdot F_ha \n\nArguments\n\n'F_ha': Hole factor, 1 for valve and bubble cap trays; \n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"Index","title":"Index","text":"fug.fugk","category":"page"},{"location":"index.html#fug.fugk","page":"Index","title":"fug.fugk","text":"fugk(comp, xFeed, kBot, kDist, HKi, LKi, splitFracHK, splitFracLK, F, B, D, quality, RRHeuristic)\n\nmain function for the Fenske-Underwood-Gilliand-Kirkbride function. Please make sure to put your components in the correct order.\n\nArguments\n\n'comp': vector of component names in order from lowest to highest volitility\n\n'xFeed': vector of fractions for each component in comp\n\n'kBot': vector of k values for the bottoms of the column from lowest to highest\n\n'kDist': vector of k values for the distillate of the column from lowest to highest\n\n'HKi': Index of the heavy key (ie index in the comp list)\n\n'LKi': Index of the light key (ie index in the comp list)\n\n'splitFracHK': The fraction of the heavy key that will go to the bottoms. If 90\\% of the heavy key goes to the bottoms then 0.9\n\n'splitFracLK': The fraction of the light key that will go to the distilate\n\n'F': Feed molar feed rate\n\n'B': Bottoms molar flow rate\n\n'D': Distilate molar flow rate\n\n'quality': vapor fraction of the feed\n\n'RRHeuristic': reflux ratio heuristic value, typically in range [1.2,1.4]\n\n\n\n\n\n","category":"function"}]
}
